# -*- coding: utf-8 -*-
"""Handwritten Digit Classification using ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I7gXFfpr0yw9OeEGYcihSqhhXtcT5uot
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten #flatten le 2d image ko matrix lai 1d image ko matrix ma lag cha

(X_train,y_train),(X_test,y_test)=keras.datasets.mnist.load_data()

X_train

X_train.shape

import matplotlib.pyplot as plt

X_train=X_train/255
X_test=X_test/255

X_train[0]

model= Sequential()
model.add(Flatten(input_shape=(28,28))) # 28 * 28 pixel ko pic which is 2d matrix lai 1d matrix maa lagna ko laagi lekhya, pachi use huncha because train haaley ko chaina

#model banaauna laako
#below is hidden layer
model.add(Dense(128,activation='relu'))#128 is the no of nodes in the hidden layer and no need to give input because Flatten ko value nai Dense ko input huncha
model.add(Dense(32,activation='relu'))
#below is output layer
model.add(Dense(10,activation='softmax'))# this is the output node having 10 nodes and for multiple output node we use softmax as the activation function

model.summary()

model.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

history=model.fit(X_train,y_train,epochs=25,validation_split=0.2)# yesma model train garincha,epochs le kati choti train garney bhacha bhaney validation_split le kati train ra kati test bhancha

#for finding the probabilty
y_prob=model.predict(X_test)

y_pred=y_prob.argmax(axis=1)

from sklearn.metrics import accuracy_score

accuracy_score(y_test,y_pred)

plt.imshow(X_test[10])#real ans

model.predict(X_test[10].reshape(1,28,28)).argmax(axis=1)#ans given by model

